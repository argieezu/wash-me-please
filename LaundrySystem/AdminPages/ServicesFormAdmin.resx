<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAB
        1wAAAdcBjJIIaAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAXQSURBVHhe7Zr9
        b1NlFMcbMb5EFDYlJroZ4oYhRv8BMxEDGeKi4xcCMTrUZCqEoWZRgQ2zBZQpo9s69tLWvbjhtnZlMCbo
        3rJfiFHnKwOj/CAm6iBzY+AIURgcz7k9LffenjZtaXt3bb/JJ7t9nnOf+3y/z9N7bwmWlFJKKe4C+91L
        +TBAofpML3BbboHGNBtyhZsCRH3QkF5Dtdz0/xDYLLeiuUMIENwcIF8/NKQdBWvG7dxsfkFjepXfXDgB
        eNnDzeYWruYjaOaK2hx3BUhdg+A56Q9zl3mFRj7UGQs3APoq7OYu8wqNjOmNcVeA9HXIce4yr9DEpM5U
        JDtggrtCaiojG9Rw89wQGpkJMNaY5obm+Yu4xELHSltg3d9cotHkfQ+tnMrMWscfgwZANVTLH40R3shG
        BWPK6oI9fa0CHYs1C7/mYfyazlyyDE1eRGbPZWQ/T21q84TSdn/2Wjy+glwyNAQMoFo0Fw72hVYeRpGy
        8mjIZxSZncrIqlF9ZpQ27PO3GRcC2BdkoRnNYzBMLkP9ggd5GEXnMrPW64yFyyydy8MkXlHtAt3q+6Ta
        2pJRCf9XxTDhu/08sKf1ikZlPoMyy818eoBwi1f7DE4uXgoTH1hhfOwknDl+AiYq9ipt1wPIqubTjBXU
        LZqPIfwomNXzA9XyaX5dN6SFDI+fOauB2qRagoczRhhAnmBYiyNtNZdrJJkhaOX1AYyfOCnWEjycMVJ2
        gWRaTdu9d3C5RpIZgra9PoAzx8fEWoKHM06iaRVcFiDJDCF+BXZXirUED2ecJNNquCykAm6CGALthDl9
        E/RJMq2Gy4LKlI/BztI1y12la+BGOLRrHdgKn4Q9BTk3xos5y3laiZO7dM2IZCoShm2F0PZWnmwqEl7I
        GeFpJUaxWv1jjs3Ksel2QaxW3xeAqXZBLFffFwBhml0Qy9VXB2CKXRDr1VcHQMz5XRDr1dcHYLongtpI
        tKgDiIYuhKeTeEmGIkUyFQkd259N7gDa385L7gCa3lid3AHUb1yZzAHkg/WlZckbQGvx08qjj6eTeEmG
        IkUyFi6+FyeeTuIlGYoUyVg4+FY/KQPoLMmHqpeXJW8AdRtX+M0nXQD2zbka87ENoOg8hEQnyVCkSCaD
        4dyyKsA8AUf338VTukFJptXoNNpSDKc6d8LZg7Vw/lMnTPc5YLynBn7uKIcvm94UDeuRjOqh77x+2xM9
        JQVw1lUHMNRNTCGbeGpBVPAdiOR7vEimVcBI52IY8mzAC7Uiv/GFgzJzpBl+91hhrH0HfOHcElUAdLdX
        3/CI5qJn4HRbpXTNazDcnctuBUnmiXADCLxg2FwdcMH0YQecdlXA961b0XxRiADyFeP6fyCpLVwB3+4r
        UcaSrsE42a0gyTyRgAD0XO7/BCYO1cFX+4qht/w55Vcd/bChd3t6vVUbr9zwOAzu2giXjrSJY2kY7rax
        W0GSecKAAPRMHXDAN7XboeG1pzTmXe+sh788jeI5Av/AoPtRditIMk/EI4CDToAOq/fvQJdcI3CxrxXq
        Xs0Fx6Y8ONVcIdYE4VcYcD/BToNIMk/EI4CW9wH2bfVStw2gaSdAVw1AXwvgKsnnMBdctReuDrpmpT6B
        GWQbjLTcxi5DSDJPxCOA/k4ATz3Ax7iK9SXXwyDqtwO07gZw4yPsSLv2vG5s279X2yZzDXFjmA+wuzAk
        mSfiEYAGXHFaeZcNoPk9745QB9K4w9tuf9f7ucchjKFhFG92j7GrCCSZJ+IegA56jPV+5L1HOMu1YXRW
        yed4+RPDfAXKym5iRxFKMk8kOgA9n3cAHMYd0o9/pf6h7n+RGjjWeyc7iVKSecLoAELTB0MHNP+5MnpJ
        5ok5GYDnJxj0rOKZx0iSeWJuBYA/atyvg9s9j2cdQ0nmiXADGHTn4OQGhUnHgsu46nYY6biHZ2uABNMa
        WPTGhRPej/yBXGUD0YA3N88vSDUMeJbw8AZKMq0mpZRSMpcslv8AYRZPHCrvhV0AAAAASUVORK5CYII=
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>